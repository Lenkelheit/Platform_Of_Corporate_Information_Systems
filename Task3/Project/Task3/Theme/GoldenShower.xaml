<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    
    <!--COLORS-->



    <Color x:Key="DefaultFillBackgroundColor">#FFFA96</Color>
    <Color x:Key="DefaultBackgroundColor">#FFFFFF</Color>
    <Color x:Key="DefaultDisabledBackgroundColor">#E1E1E1</Color>

    <Color x:Key="DisabledBtnColor">#CDC8C8</Color>
    <Color x:Key="DefaultBtnColor">#FFFAC8</Color>
    <Color x:Key="HoverBtnColor">#FFFA9B</Color>
    <Color x:Key="PressedBtnColor">#FFAA2D</Color>

    <Color x:Key="MoneyColor">#23D214</Color>
    <Color x:Key="TimeColor">#3741C8</Color>

    <Color x:Key="MrWhite">#FFFFFF</Color>
    <Color x:Key="MrBlack">#000000</Color>


    <!--BRUSHES-->


    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource MrBlack}" />
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource MrWhite}" />

    <SolidColorBrush x:Key="DefaultFillBackgroundBrush" Color="{StaticResource DefaultFillBackgroundColor}"/>
    <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="{StaticResource DefaultBackgroundColor}"/>
    <SolidColorBrush x:Key="DefaultDisabledBackgroundBrush" Color="{StaticResource DefaultDisabledBackgroundColor}"/>


    <SolidColorBrush x:Key="MoneyBrush" Color="{StaticResource MoneyColor}"/>
    <SolidColorBrush x:Key="TimeBrush" Color="{StaticResource TimeColor}"/>

    <SolidColorBrush x:Key="DisabledBtnBrush" Color="{StaticResource DisabledBtnColor}"/>
    <SolidColorBrush x:Key="DefaultBtnBrush" Color="{StaticResource DefaultBtnColor}" />
    <SolidColorBrush x:Key="HoverBtnBrush" Color="{StaticResource HoverBtnColor}" />
    <SolidColorBrush x:Key="PressedBtnBrush" Color="{StaticResource PressedBtnColor}" />




    <SolidColorBrush x:Key="ProgressBar.Progress" Color="{StaticResource PressedBtnColor}"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="{StaticResource DefaultBtnColor}"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="{StaticResource MrBlack}"/>


    <!--TEMPLATES-->





    <!--LIST BOX ITEM FOR ORDER LIST-->
    <DataTemplate x:Key="ListItemOrderTemplate">
        <Grid>
            <!--SCALING-->
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--DATA-->
            <Label Grid.Row="0" Grid.Column="0" Content="â„–" />
            <Label Grid.Row="1" Grid.Column="0" Content="Time" />
            <Label Grid.Row="0" Grid.Column="1" Content="#" />
            <Label Grid.Row="1" Grid.Column="1" Content="00:05" />
            <Label Grid.Row="0" Grid.Column="2" Content="Name" />
            <Label Grid.Row="1" Grid.Column="2" Content="100$" />
        </Grid>
    </DataTemplate>
    
    <!--LIST BOX ITEM FOR SCORES-->
    <DataTemplate x:Key="ListItemScoreTemplate">
        <Grid>
            <!--SCALING-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <!--DATA-->
            <Label Grid.Column="0" Content="{Binding Path=Number}" />
            <Label Grid.Column="0" Content="{Binding Path=Name}" />
            <Label Grid.Column="1" Content="{Binding Path=Score}" />
        </Grid>
    </DataTemplate>


    <!--PROGRESS BAR-->
    
    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    
                                    <Storyboard RepeatBehavior="Forever">
                                        
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" 
                                            Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                                                      Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>                                        
                                        </PointAnimationUsingKeyFrames>
                                        
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"/>
                        
                        <Rectangle x:Name="PART_Track"/>
                        
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BUTTON-->

    <ControlTemplate TargetType="Button" x:Key="ButtonTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource BlackBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>
    

    <!--TEXT BOX-->
    <ControlTemplate TargetType="{x:Type TextBoxBase}" x:Key="TextBoxTemplate">
        <Border
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
            <ScrollViewer
                            x:Name="PART_ContentHost" 
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
        </Border>
    </ControlTemplate>



    <!--GROUP BOX-->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>

    <ControlTemplate TargetType="{x:Type GroupBox}" x:Key="GroupBoxTemplate">
        <Grid SnapsToDevicePixels="true">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="6"/>
            </Grid.RowDefinitions>

            <Border BorderBrush="Transparent" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.ColumnSpan="4"
                                Grid.Column="0" 
                                CornerRadius="0"
                                Grid.Row="1"
                                Grid.RowSpan="3"/>
            <Border BorderBrush="White" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Grid.ColumnSpan="4" 
                                CornerRadius="0"
                                Grid.Row="1" 
                                Grid.RowSpan="3">
                <Border.OpacityMask>
                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                        <Binding ElementName="Header" Path="ActualWidth"/>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </Border.OpacityMask>
                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0">
                    <Border BorderBrush="White"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        CornerRadius="0"/>
                </Border>
            </Border>
            <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                <ContentPresenter
                                ContentSource="Header" 
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ContentPresenter 
                            Grid.ColumnSpan="2" 
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            Grid.Row="2"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Grid>
    </ControlTemplate>
    
    
    
    

    <!--STYLES-->

    
    
    
    
    <!--WINDOW-->
    <Style TargetType="Window" x:Key="WindowBase">
        <Setter Property="Icon" Value="/Resources/ico/ico.ico"/>
    </Style>
    
    <Style TargetType="Window" x:Key="MessageWindow" BasedOn="{StaticResource WindowBase}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
    </Style>

    <!--TEXT BOX-->
    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PressedBtnBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource DefaultBtnBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PressedBtnBrush}"/>
            </Trigger>            
        </Style.Triggers>
        
    </Style>
    
    <!--IMAGES-->
    <Style TargetType="Image">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="MaxWidth" Value="40"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="20"/>
    </Style>
    <!--BUTTON-->
    <Style TargetType="Button" x:Key="BtnStandart">
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource DefaultBtnBrush}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverBtnBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBtnBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBtnBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BtnStandart}">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 0"/>
    </Style>
    
    <Style TargetType="Button" x:Key="MainButton" BasedOn="{StaticResource BtnStandart}">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderThickness" Value="0, 1, 0, 0"/>
    </Style>
    
    
    <!--LABEL-->
    <!--IMPORTANT LABEL-->
    <Style TargetType="Label" x:Key="ImportantLabel">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="25"/>
        
    </Style>
    <!--HEADER-->
    <Style TargetType="Label" x:Key="Header" BasedOn="{StaticResource ImportantLabel}">
        <Setter Property="Background" Value="{StaticResource DefaultBtnBrush}"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BlackBrush}"/>
    </Style>
    <!--CENTER-->
    <Style TargetType="Label" x:Key="CenterLabel">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="15, 0, 0, 0"/>
    </Style>

    <!--FOR CABINET-->
    <Style TargetType="Label" x:Key="LeftLabel">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="15, 0, 0, 0"/>
    </Style>
    <Style TargetType="Label" x:Key="RightLabel">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="0, 0, 15, 0"/>
    </Style>
    
    <!--GROUP BOX-->
    <Style TargetType="GroupBox" x:Key="GroupBoxBase">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template" Value="{StaticResource GroupBoxTemplate}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PressedBtnBrush}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Normal" FontSize="16"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
